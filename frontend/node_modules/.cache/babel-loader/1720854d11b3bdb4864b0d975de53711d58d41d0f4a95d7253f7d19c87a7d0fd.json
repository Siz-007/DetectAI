{"ast":null,"code":"var _jsxFileName = \"D:\\\\DetectAI-main\\\\DetectAI-main\\\\frontend\\\\src\\\\components\\\\TextDragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport TextApiResponseDisplay from \"./TextApiResponseDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextDragAndDrop = ({\n  onFilesSelected\n}) => {\n  _s();\n  const [highlight, setHighlight] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [apiResponse, setApiResponse] = useState(null);\n  const [showTextDragDrop, setShowTextDragDrop] = useState(true);\n  const [textValue, setTextValue] = useState(''); // State for text input\n  const fileInputRef = useRef(null);\n  const handleDragOver = event => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n  const handleDrop = async event => {\n    event.preventDefault();\n    setHighlight(false);\n    const files = event.dataTransfer.files;\n    const filteredFiles = filterFiles(Array.from(files));\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileInputChange = async event => {\n    const files = event.target.files;\n    const filteredFiles = filterFiles(Array.from(files));\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n  const handleTextChange = event => {\n    setTextValue(event.target.value);\n  };\n  const handleTextSubmit = async () => {\n    // Call API with the text input\n    await uploadTextFile(textValue);\n  };\n  const filterFiles = files => {\n    return files.filter(file => {\n      const fileName = file.name;\n      const extension = fileName.split('.').pop().toLowerCase();\n      return ['txt', 'docx', 'doc', 'pdf'].includes(extension);\n    });\n  };\n  const uploadTextFile = async textFile => {\n    const formData = new FormData();\n    formData.append('fileToUpload', textFile);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload text file');\n      }\n      const responseData = await response.json();\n      setApiResponse(responseData);\n      setShowTextDragDrop(false);\n    } catch (error) {\n      console.error('Error uploading text file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showTextDragDrop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drag-drop-area ${highlight ? 'highlight' : ''}`,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        className: \"file-input\",\n        type: \"file\",\n        onChange: handleFileInputChange,\n        accept: \".txt,.docx,.pdf,.doc\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: addtext,\n        alt: \"image failed to load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-drop-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span1\",\n            children: \"Drag and drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" or \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span2\",\n            children: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 20\n          }, this), \" your text file here.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: textValue,\n        onChange: handleTextChange,\n        placeholder: \"Type or paste your text here...\",\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTextSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(TextApiResponseDisplay, {\n      apiResponse: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(TextDragAndDrop, \"fZPT+6JOGImmCC7Gjxihp6yGZZg=\");\n_c = TextDragAndDrop;\nexport default TextDragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"TextDragAndDrop\");","map":{"version":3,"names":["React","useState","useRef","addtext","TextApiResponseDisplay","jsxDEV","_jsxDEV","TextDragAndDrop","onFilesSelected","_s","highlight","setHighlight","uploadedFiles","setUploadedFiles","apiResponse","setApiResponse","showTextDragDrop","setShowTextDragDrop","textValue","setTextValue","fileInputRef","handleDragOver","event","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","filteredFiles","filterFiles","Array","from","length","uploadedFile","uploadTextFile","openFileDialog","current","click","handleFileInputChange","target","handleTextChange","value","handleTextSubmit","filter","file","fileName","name","extension","split","pop","toLowerCase","includes","textFile","formData","FormData","append","response","fetch","method","body","ok","Error","responseData","json","error","console","children","className","onDragOver","onDragLeave","onDrop","ref","type","onChange","accept","multiple","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/DetectAI-main/DetectAI-main/frontend/src/components/TextDragAndDrop.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport TextApiResponseDisplay from \"./TextApiResponseDisplay\";\n\nconst TextDragAndDrop = ({ onFilesSelected }) => {\n  const [highlight, setHighlight] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [apiResponse, setApiResponse] = useState(null);\n  const [showTextDragDrop, setShowTextDragDrop] = useState(true);\n  const [textValue, setTextValue] = useState(''); // State for text input\n  const fileInputRef = useRef(null);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n\n  const handleDrop = async (event) => {\n    event.preventDefault();\n    setHighlight(false);\n\n    const files = event.dataTransfer.files;\n    const filteredFiles = filterFiles(Array.from(files));\n\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileInputChange = async (event) => {\n    const files = event.target.files;\n    const filteredFiles = filterFiles(Array.from(files));\n\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n\n  const handleTextChange = (event) => {\n    setTextValue(event.target.value);\n  };\n\n  const handleTextSubmit = async () => {\n    // Call API with the text input\n    await uploadTextFile(textValue);\n  };\n\n  const filterFiles = (files) => {\n    return files.filter(file => {\n      const fileName = file.name;\n      const extension = fileName.split('.').pop().toLowerCase();\n      return ['txt', 'docx', 'doc', 'pdf'].includes(extension);\n    });\n  };\n\n  const uploadTextFile = async (textFile) => {\n    const formData = new FormData();\n    formData.append('fileToUpload', textFile);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to upload text file');\n      }\n    \n      const responseData = await response.json();\n      setApiResponse(responseData);\n      setShowTextDragDrop(false);\n    } catch (error) {\n      console.error('Error uploading text file:', error);\n    }\n  };\n\n  return (\n    <div>    \n      {showTextDragDrop && (\n        <div\n          className={`drag-drop-area ${highlight ? 'highlight' : ''}`}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <input\n            ref={fileInputRef}\n            className=\"file-input\"\n            type=\"file\"\n            onChange={handleFileInputChange}\n            accept=\".txt,.docx,.pdf,.doc\"\n            multiple\n          />\n          <img src={addtext} alt=\"image failed to load\"/>\n          <div className=\"drag-drop-text\">\n            <p><span className=\"span1\">Drag and drop</span></p>\n            <p> or <span className=\"span2\">upload</span> your text file here.</p>\n          </div>\n          {/* Textarea for direct input */}\n          <textarea\n            value={textValue}\n            onChange={handleTextChange}\n            placeholder=\"Type or paste your text here...\"\n            className=\"text-input\"\n          ></textarea>\n          <button onClick={handleTextSubmit}>Submit</button>\n        </div>\n      )}\n      {apiResponse && <TextApiResponseDisplay apiResponse={apiResponse} />}\n    </div>\n  );\n};\n\nexport default TextDragAndDrop;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,sBAAsB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAMmB,YAAY,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMmB,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBZ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMa,eAAe,GAAGA,CAAA,KAAM;IAC5Bb,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMc,UAAU,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBZ,YAAY,CAAC,KAAK,CAAC;IAEnB,MAAMe,KAAK,GAAGJ,KAAK,CAACK,YAAY,CAACD,KAAK;IACtC,MAAME,aAAa,GAAGC,WAAW,CAACC,KAAK,CAACC,IAAI,CAACL,KAAK,CAAC,CAAC;IAEpD,IAAIE,aAAa,CAACI,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC,CAAC;MACrCf,gBAAgB,CAAC,CAACoB,YAAY,CAAC,CAAC;;MAEhC;MACA,MAAMC,cAAc,CAACD,YAAY,CAAC;IACpC;EACF,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3Bf,YAAY,CAACgB,OAAO,CAACC,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,qBAAqB,GAAG,MAAOhB,KAAK,IAAK;IAC7C,MAAMI,KAAK,GAAGJ,KAAK,CAACiB,MAAM,CAACb,KAAK;IAChC,MAAME,aAAa,GAAGC,WAAW,CAACC,KAAK,CAACC,IAAI,CAACL,KAAK,CAAC,CAAC;IAEpD,IAAIE,aAAa,CAACI,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMC,YAAY,GAAGL,aAAa,CAAC,CAAC,CAAC;MACrCf,gBAAgB,CAAC,CAACoB,YAAY,CAAC,CAAC;;MAEhC;MACA,MAAMC,cAAc,CAACD,YAAY,CAAC;IACpC;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAIlB,KAAK,IAAK;IAClCH,YAAY,CAACG,KAAK,CAACiB,MAAM,CAACE,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC;IACA,MAAMR,cAAc,CAAChB,SAAS,CAAC;EACjC,CAAC;EAED,MAAMW,WAAW,GAAIH,KAAK,IAAK;IAC7B,OAAOA,KAAK,CAACiB,MAAM,CAACC,IAAI,IAAI;MAC1B,MAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAI;MAC1B,MAAMC,SAAS,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACzD,OAAO,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAACC,QAAQ,CAACJ,SAAS,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMb,cAAc,GAAG,MAAOkB,QAAQ,IAAK;IACzC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEH,QAAQ,CAAC;IAEzC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAC1ChD,cAAc,CAAC+C,YAAY,CAAC;MAC5B7C,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,CAAC,OAAO+C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACE1D,OAAA;IAAA4D,QAAA,GACGlD,gBAAgB,iBACfV,OAAA;MACE6D,SAAS,EAAG,kBAAiBzD,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;MAC5D0D,UAAU,EAAE/C,cAAe;MAC3BgD,WAAW,EAAE7C,eAAgB;MAC7B8C,MAAM,EAAE7C,UAAW;MAAAyC,QAAA,gBAEnB5D,OAAA;QACEiE,GAAG,EAAEnD,YAAa;QAClB+C,SAAS,EAAC,YAAY;QACtBK,IAAI,EAAC,MAAM;QACXC,QAAQ,EAAEnC,qBAAsB;QAChCoC,MAAM,EAAC,sBAAsB;QAC7BC,QAAQ;MAAA;QAAA9B,QAAA,EAAA+B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFxE,OAAA;QAAKyE,GAAG,EAAE5E,OAAQ;QAAC6E,GAAG,EAAC;MAAsB;QAAAnC,QAAA,EAAA+B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/CxE,OAAA;QAAK6D,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC7B5D,OAAA;UAAA4D,QAAA,eAAG5D,OAAA;YAAM6D,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAa;YAAArB,QAAA,EAAA+B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAjC,QAAA,EAAA+B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnDxE,OAAA;UAAA4D,QAAA,GAAG,MAAI,eAAA5D,OAAA;YAAM6D,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAM;YAAArB,QAAA,EAAA+B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,yBAAqB;QAAA;UAAAjC,QAAA,EAAA+B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAjC,QAAA,EAAA+B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eAENxE,OAAA;QACEmC,KAAK,EAAEvB,SAAU;QACjBuD,QAAQ,EAAEjC,gBAAiB;QAC3ByC,WAAW,EAAC,iCAAiC;QAC7Cd,SAAS,EAAC;MAAY;QAAAtB,QAAA,EAAA+B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACZxE,OAAA;QAAQ4E,OAAO,EAAExC,gBAAiB;QAAAwB,QAAA,EAAC;MAAM;QAAArB,QAAA,EAAA+B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAjC,QAAA,EAAA+B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN,EACAhE,WAAW,iBAAIR,OAAA,CAACF,sBAAsB;MAACU,WAAW,EAAEA;IAAY;MAAA+B,QAAA,EAAA+B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAjC,QAAA,EAAA+B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACrE,EAAA,CA5HIF,eAAe;AAAA4E,EAAA,GAAf5E,eAAe;AA8HrB,eAAeA,eAAe;AAAC,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
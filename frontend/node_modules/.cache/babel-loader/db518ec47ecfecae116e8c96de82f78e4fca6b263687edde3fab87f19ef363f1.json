{"ast":null,"code":"var _jsxFileName = \"/home/sharad/Desktop/last/DetectAI/frontend/src/components/TextDragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextDragAndDrop = ({\n  onFilesSelected\n}) => {\n  _s();\n  const [highlight, setHighlight] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [apiResponse, setApiResponse] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleDragOver = event => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n  const handleDrop = async event => {\n    event.preventDefault();\n    setHighlight(false);\n    const files = event.dataTransfer.files;\n    const filteredFiles = filterFiles(Array.from(files));\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileInputChange = async event => {\n    const files = event.target.files;\n    const filteredFiles = filterFiles(Array.from(files));\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n  const filterFiles = files => {\n    return files.filter(file => {\n      const fileType = file.type;\n      return fileType === 'text/plain';\n    });\n  };\n  const uploadTextFile = async textFile => {\n    const formData = new FormData();\n    formData.append('fileToUpload', textFile);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload text file');\n      }\n      const responseData = await response.json();\n      setApiResponse(responseData);\n    } catch (error) {\n      console.error('Error uploading text file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `drag-drop-area ${highlight ? 'highlight' : ''}`,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    onClick: openFileDialog,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: fileInputRef,\n      className: \"file-input\",\n      type: \"file\",\n      onChange: handleFileInputChange,\n      accept: \".txt\" // Accept only text files\n      ,\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: addtext,\n      alt: \"image failed to load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drag-drop-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span1\",\n          children: \"Drag and drop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" or \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span2\",\n          children: \"upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this), \" your text file here.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploaded-files\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Uploaded Text Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-response\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"API Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(apiResponse, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TextDragAndDrop, \"Ku9bSrlKQiVC/GnFvKlExHnZwp4=\");\n_c = TextDragAndDrop;\nexport default TextDragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"TextDragAndDrop\");","map":{"version":3,"names":["React","useState","useRef","addtext","jsxDEV","_jsxDEV","TextDragAndDrop","onFilesSelected","_s","highlight","setHighlight","uploadedFiles","setUploadedFiles","apiResponse","setApiResponse","fileInputRef","handleDragOver","event","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","filteredFiles","filterFiles","Array","from","length","uploadedFile","uploadTextFile","openFileDialog","current","click","handleFileInputChange","target","filter","file","fileType","type","textFile","formData","FormData","append","response","fetch","method","body","ok","Error","responseData","json","error","console","className","onDragOver","onDragLeave","onDrop","onClick","children","ref","onChange","accept","multiple","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","index","name","JSON","stringify","_c","$RefreshReg$"],"sources":["/home/sharad/Desktop/last/DetectAI/frontend/src/components/TextDragAndDrop.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\n\nconst TextDragAndDrop = ({ onFilesSelected }) => {\n  const [highlight, setHighlight] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [apiResponse, setApiResponse] = useState(null);\n  const fileInputRef = useRef(null);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n\n  const handleDrop = async (event) => {\n    event.preventDefault();\n    setHighlight(false);\n\n    const files = event.dataTransfer.files;\n    const filteredFiles = filterFiles(Array.from(files));\n\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileInputChange = async (event) => {\n    const files = event.target.files;\n    const filteredFiles = filterFiles(Array.from(files));\n\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n\n  const filterFiles = (files) => {\n    return files.filter(file => {\n      const fileType = file.type;\n      return fileType === 'text/plain';\n    });\n  };\n\n  const uploadTextFile = async (textFile) => {\n    const formData = new FormData();\n    formData.append('fileToUpload', textFile);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to upload text file');\n      }\n    \n      const responseData = await response.json();\n      setApiResponse(responseData);\n    } catch (error) {\n      console.error('Error uploading text file:', error);\n    }\n  };\n\n  return (\n    <div\n      className={`drag-drop-area ${highlight ? 'highlight' : ''}`}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDrop}\n      onClick={openFileDialog}\n    >\n      <input\n        ref={fileInputRef}\n        className=\"file-input\"\n        type=\"file\"\n        onChange={handleFileInputChange}\n        accept=\".txt\" // Accept only text files\n        multiple\n      />\n      <img src={addtext} alt=\"image failed to load\"/>\n      <div className=\"drag-drop-text\">\n        <p><span className=\"span1\">Drag and drop</span></p>\n        <p> or <span className=\"span2\">upload</span> your text file here.</p>\n      </div>\n      {uploadedFiles.length > 0 && (\n        <div className=\"uploaded-files\">\n          <h3>Uploaded Text Files:</h3>\n          <ul>\n            {uploadedFiles.map((file, index) => (\n              <li key={index}>{file.name}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {apiResponse && (\n        <div className=\"api-response\">\n          <h3>API Response:</h3>\n          <pre>{JSON.stringify(apiResponse, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextDragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
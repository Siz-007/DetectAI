{"ast":null,"code":"var _jsxFileName = \"D:\\\\DetectAI-main\\\\DetectAI-main\\\\frontend\\\\src\\\\components\\\\TextDragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport TextApiResponseDisplay from \"./TextApiResponseDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextDragAndDrop = ({\n  onFilesSelected\n}) => {\n  _s();\n  const [highlight, setHighlight] = useState(false);\n  const [apiResponse, setApiResponse] = useState(null);\n  const [showTextDragDrop, setShowTextDragDrop] = useState(true);\n  const textAreaRef = useRef(null);\n  const handleDragOver = event => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n  const handleDrop = async event => {\n    event.preventDefault();\n    setHighlight(false);\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      const fileReader = new FileReader();\n      fileReader.onload = async () => {\n        const text = fileReader.result;\n        await processText(text);\n      };\n      fileReader.readAsText(files[0]);\n    }\n  };\n  const openFileDialog = () => {\n    textAreaRef.current.focus();\n  };\n  const handleTextAreaChange = async event => {\n    const newText = event.target.value;\n    await processText(newText);\n  };\n  const processText = async text => {\n    try {\n      const formData = new FormData();\n      formData.append('textToProcess', text);\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to process text');\n      }\n      const responseData = await response.json();\n      setApiResponse(responseData);\n      setShowTextDragDrop(false);\n    } catch (error) {\n      console.error('Error processing text:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showTextDragDrop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drag-drop-area ${highlight ? 'highlight' : ''}`,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      onClick: openFileDialog,\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: textAreaRef,\n        className: \"text-area\",\n        onChange: handleTextAreaChange,\n        placeholder: \"Enter your text here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(TextApiResponseDisplay, {\n      apiResponse: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(TextDragAndDrop, \"z56bnNMkKCNtKgw1O2DrRH8E1b0=\");\n_c = TextDragAndDrop;\nexport default TextDragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"TextDragAndDrop\");","map":{"version":3,"names":["React","useState","useRef","addtext","TextApiResponseDisplay","jsxDEV","_jsxDEV","TextDragAndDrop","onFilesSelected","_s","highlight","setHighlight","apiResponse","setApiResponse","showTextDragDrop","setShowTextDragDrop","textAreaRef","handleDragOver","event","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","length","fileReader","FileReader","onload","text","result","processText","readAsText","openFileDialog","current","focus","handleTextAreaChange","newText","target","value","formData","FormData","append","response","fetch","method","body","ok","Error","responseData","json","error","console","children","className","onDragOver","onDragLeave","onDrop","onClick","ref","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DetectAI-main/DetectAI-main/frontend/src/components/TextDragAndDrop.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport TextApiResponseDisplay from \"./TextApiResponseDisplay\";\n\nconst TextDragAndDrop = ({ onFilesSelected }) => {\n  const [highlight, setHighlight] = useState(false);\n  const [apiResponse, setApiResponse] = useState(null);\n  const [showTextDragDrop, setShowTextDragDrop] = useState(true);\n  const textAreaRef = useRef(null);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n\n  const handleDrop = async (event) => {\n    event.preventDefault();\n    setHighlight(false);\n    const files = event.dataTransfer.files;\n\n    if (files.length > 0) {\n      const fileReader = new FileReader();\n      fileReader.onload = async () => {\n        const text = fileReader.result;\n        await processText(text);\n      };\n      fileReader.readAsText(files[0]);\n    }\n  };\n\n  const openFileDialog = () => {\n    textAreaRef.current.focus();\n  };\n\n  const handleTextAreaChange = async (event) => {\n    const newText = event.target.value;\n    await processText(newText);\n  };\n\n  const processText = async (text) => {\n    try {\n      const formData = new FormData();\n      formData.append('textToProcess', text);\n\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to process text');\n      }\n\n      const responseData = await response.json();\n      setApiResponse(responseData);\n      setShowTextDragDrop(false);\n    } catch (error) {\n      console.error('Error processing text:', error);\n    }\n  };\n\n  return (\n    <div>\n      {showTextDragDrop && (\n        <div\n          className={`drag-drop-area ${highlight ? 'highlight' : ''}`}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n          onClick={openFileDialog}\n        >\n          <textarea\n            ref={textAreaRef}\n            className=\"text-area\"\n            onChange={handleTextAreaChange}\n            placeholder=\"Enter your text here\"\n          ></textarea>\n        </div>\n      )}\n      {apiResponse && <TextApiResponseDisplay apiResponse={apiResponse} />}\n    </div>\n  );\n};\n\nexport default TextDragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/sharad/Desktop/Major-frontend/src/components/Check.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Check.css\";\nimport DragAndDrop from './DragAndDrop';\nimport TextDragAndDrop from './TextDragAndDrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Check() {\n  _s();\n  const handleFilesSelected = files => {\n    console.log('Selected files:', files);\n    // Process the selected files here\n  };\n\n  // State to manage which component to display\n  const [showTextDragAndDrop, setShowTextDragAndDrop] = useState(false);\n\n  // Function to toggle between components\n  // const toggleComponent = () => {\n  //   setShowTextDragAndDrop(!showTextDragAndDrop);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `image ${!showTextDragAndDrop ? 'active' : ''}`,\n        onClick: () => setShowTextDragAndDrop(false),\n        children: \"IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text ${showTextDragAndDrop ? 'active' : ''}`,\n        onClick: () => setShowTextDragAndDrop(true),\n        children: \"TEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), showTextDragAndDrop ? /*#__PURE__*/_jsxDEV(TextDragAndDrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(DragAndDrop, {\n      onFilesSelected: handleFilesSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true);\n}\n_s(Check, \"4nG+aQIz06D1RppJOuumhQ4zQcs=\");\n_c = Check;\nexport default Check;\nvar _c;\n$RefreshReg$(_c, \"Check\");","map":{"version":3,"names":["React","useState","DragAndDrop","TextDragAndDrop","jsxDEV","_jsxDEV","Fragment","_Fragment","Check","_s","handleFilesSelected","files","console","log","showTextDragAndDrop","setShowTextDragAndDrop","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onFilesSelected","_c","$RefreshReg$"],"sources":["/home/sharad/Desktop/Major-frontend/src/components/Check.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./Check.css\";\nimport DragAndDrop from './DragAndDrop';\nimport TextDragAndDrop from './TextDragAndDrop';\n\nfunction Check() {\n  const handleFilesSelected = (files) => {\n    console.log('Selected files:', files);\n    // Process the selected files here\n  };\n\n  // State to manage which component to display\n  const [showTextDragAndDrop, setShowTextDragAndDrop] = useState(false);\n\n  // Function to toggle between components\n  // const toggleComponent = () => {\n  //   setShowTextDragAndDrop(!showTextDragAndDrop);\n  // };\n\n  return (\n    <>\n      <div className=\"check\">\n        {/* Toggle between components based on state */}\n        {/* Click handlers to toggle between components */}\n        <div\n          className={`image ${!showTextDragAndDrop ? 'active' : ''}`}\n          onClick={() => setShowTextDragAndDrop(false)}\n        >\n          IMAGE\n        </div>\n        <div\n          className={`text ${showTextDragAndDrop ? 'active' : ''}`}\n          onClick={() => setShowTextDragAndDrop(true)}\n        >\n          TEXT\n        </div>\n      </div>\n      {/* Render components based on state */}\n      {showTextDragAndDrop ? (<TextDragAndDrop />) : ( <DragAndDrop onFilesSelected={handleFilesSelected} />)}\n    </>\n  );\n}\n\nexport default Check;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAM,CAACG,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACA;EACA;EACA;;EAEA,oBACEI,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAKY,SAAS,EAAC,OAAO;MAAAD,QAAA,gBAGpBX,OAAA;QACEY,SAAS,EAAG,SAAQ,CAACH,mBAAmB,GAAG,QAAQ,GAAG,EAAG,EAAE;QAC3DI,OAAO,EAAEA,CAAA,KAAMH,sBAAsB,CAAC,KAAK,CAAE;QAAAC,QAAA,EAC9C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNjB,OAAA;QACEY,SAAS,EAAG,QAAOH,mBAAmB,GAAG,QAAQ,GAAG,EAAG,EAAE;QACzDI,OAAO,EAAEA,CAAA,KAAMH,sBAAsB,CAAC,IAAI,CAAE;QAAAC,QAAA,EAC7C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELR,mBAAmB,gBAAIT,OAAA,CAACF,eAAe;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAMjB,OAAA,CAACH,WAAW;MAACqB,eAAe,EAAEb;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;EAAA,eACvG,CAAC;AAEP;AAACb,EAAA,CApCQD,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AAsCd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
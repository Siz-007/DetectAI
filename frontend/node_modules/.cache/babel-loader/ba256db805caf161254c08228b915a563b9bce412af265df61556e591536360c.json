{"ast":null,"code":"var _jsxFileName = \"D:\\\\DetectAI-main\\\\DetectAI-main\\\\frontend\\\\src\\\\components\\\\TextDragAndDrop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport TextApiResponseDisplay from \"./TextApiResponseDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextDragAndDrop = ({\n  onFilesSelected\n}) => {\n  _s();\n  const [highlight, setHighlight] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [apiResponse, setApiResponse] = useState(null);\n  const [enteredText, setEnteredText] = useState('');\n  const fileInputRef = useRef(null);\n  const [showTextDragDrop, setShowTextDragDrop] = useState(true);\n  const handleDragOver = event => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n  const handleDrop = async event => {\n    event.preventDefault();\n    setHighlight(false);\n    const files = event.dataTransfer.files;\n    const filteredFiles = filterFiles(Array.from(files));\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileInputChange = async event => {\n    const files = event.target.files;\n    const filteredFiles = filterFiles(Array.from(files));\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n  const handleTextareaChange = event => {\n    setEnteredText(event.target.value);\n  };\n  const handleSubmitText = async () => {\n    if (enteredText.trim() !== '') {\n      // Call API with the entered text\n      await uploadTextFile(enteredText);\n      // Clear the entered text after submission\n      setEnteredText('');\n    }\n  };\n  const filterFiles = files => {\n    return files.filter(file => {\n      const fileName = file.name;\n      const extension = fileName.split('.').pop().toLowerCase();\n      return ['txt', 'docx', 'doc', 'pdf'].includes(extension);\n    });\n  };\n  const uploadTextFile = async text => {\n    const formData = new FormData();\n    formData.append('fileToUpload', text);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload text file');\n      }\n      const responseData = await response.json();\n      setApiResponse(responseData);\n      setShowTextDragDrop(false);\n    } catch (error) {\n      console.error('Error uploading text file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showTextDragDrop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `drag-drop-area ${highlight ? 'highlight' : ''}`,\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      onClick: openFileDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        className: \"file-input\",\n        type: \"file\",\n        onChange: handleFileInputChange,\n        accept: \".txt,.docx,.pdf,.doc\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: addtext,\n        alt: \"image failed to load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drag-drop-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span1\",\n            children: \"Drag and drop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" or \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"span2\",\n            children: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }, this), \" your text file here.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: enteredText,\n      onChange: handleTextareaChange,\n      placeholder: \"Enter your text here for prediction...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitText,\n      children: \"Submit Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), apiResponse && /*#__PURE__*/_jsxDEV(TextApiResponseDisplay, {\n      apiResponse: apiResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(TextDragAndDrop, \"/hUJCYjK7LLRnyyc531gFNT/wl0=\");\n_c = TextDragAndDrop;\nexport default TextDragAndDrop;\nvar _c;\n$RefreshReg$(_c, \"TextDragAndDrop\");","map":{"version":3,"names":["React","useState","useRef","addtext","TextApiResponseDisplay","jsxDEV","_jsxDEV","TextDragAndDrop","onFilesSelected","_s","highlight","setHighlight","uploadedFiles","setUploadedFiles","apiResponse","setApiResponse","enteredText","setEnteredText","fileInputRef","showTextDragDrop","setShowTextDragDrop","handleDragOver","event","preventDefault","handleDragLeave","handleDrop","files","dataTransfer","filteredFiles","filterFiles","Array","from","length","uploadedFile","uploadTextFile","openFileDialog","current","click","handleFileInputChange","target","handleTextareaChange","value","handleSubmitText","trim","filter","file","fileName","name","extension","split","pop","toLowerCase","includes","text","formData","FormData","append","response","fetch","method","body","ok","Error","responseData","json","error","console","children","className","onDragOver","onDragLeave","onDrop","onClick","ref","type","onChange","accept","multiple","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","_c","$RefreshReg$"],"sources":["D:/DetectAI-main/DetectAI-main/frontend/src/components/TextDragAndDrop.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport addtext from '../images/textupload.png';\nimport TextApiResponseDisplay from \"./TextApiResponseDisplay\";\n\nconst TextDragAndDrop = ({ onFilesSelected }) => {\n  const [highlight, setHighlight] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [apiResponse, setApiResponse] = useState(null);\n  const [enteredText, setEnteredText] = useState('');\n  const fileInputRef = useRef(null);\n  const [showTextDragDrop, setShowTextDragDrop] = useState(true);\n\n  const handleDragOver = (event) => {\n    event.preventDefault();\n    setHighlight(true);\n  };\n\n  const handleDragLeave = () => {\n    setHighlight(false);\n  };\n\n  const handleDrop = async (event) => {\n    event.preventDefault();\n    setHighlight(false);\n\n    const files = event.dataTransfer.files;\n    const filteredFiles = filterFiles(Array.from(files));\n\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileInputChange = async (event) => {\n    const files = event.target.files;\n    const filteredFiles = filterFiles(Array.from(files));\n\n    if (filteredFiles.length > 0) {\n      const uploadedFile = filteredFiles[0];\n      setUploadedFiles([uploadedFile]);\n\n      // Call API with the uploaded text file\n      await uploadTextFile(uploadedFile);\n    }\n  };\n\n  const handleTextareaChange = (event) => {\n    setEnteredText(event.target.value);\n  };\n\n  const handleSubmitText = async () => {\n    if (enteredText.trim() !== '') {\n      // Call API with the entered text\n      await uploadTextFile(enteredText);\n      // Clear the entered text after submission\n      setEnteredText('');\n    }\n  };\n\n  const filterFiles = (files) => {\n    return files.filter(file => {\n      const fileName = file.name;\n      const extension = fileName.split('.').pop().toLowerCase();\n      return ['txt', 'docx', 'doc', 'pdf'].includes(extension);\n    });\n  };\n\n  const uploadTextFile = async (text) => {\n    const formData = new FormData();\n    formData.append('fileToUpload', text);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/process_text/', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to upload text file');\n      }\n    \n      const responseData = await response.json();\n      setApiResponse(responseData);\n      setShowTextDragDrop(false);\n    } catch (error) {\n      console.error('Error uploading text file:', error);\n    }\n  };\n\n  return (\n    <div>    \n      {showTextDragDrop && (\n        <div\n          className={`drag-drop-area ${highlight ? 'highlight' : ''}`}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n          onClick={openFileDialog}\n        >\n          <input\n            ref={fileInputRef}\n            className=\"file-input\"\n            type=\"file\"\n            onChange={handleFileInputChange}\n            accept=\".txt,.docx,.pdf,.doc\"\n            multiple\n          />\n          <img src={addtext} alt=\"image failed to load\"/>\n          <div className=\"drag-drop-text\">\n            <p><span className=\"span1\">Drag and drop</span></p>\n            <p> or <span className=\"span2\">upload</span> your text file here.</p>\n          </div>\n        </div>\n      )}\n\n      <textarea\n        value={enteredText}\n        onChange={handleTextareaChange}\n        placeholder=\"Enter your text here for prediction...\"\n      />\n\n      <button onClick={handleSubmitText}>Submit Text</button>\n\n      {apiResponse && <TextApiResponseDisplay apiResponse={apiResponse} />}\n    </div>\n  );\n};\n\nexport default TextDragAndDrop;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}